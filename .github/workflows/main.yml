name: Release Workflow

on:
  push:
    branches:
      - main

jobs:
  build-image:
  name: Build docker image
  runs-on: ubuntu-20.04
  steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: mydebianrepo:latest
          outputs: type=docker,dest=/tmp/mydebianrepo.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: mydebianrepo
          path: /tmp/mydebianrepo.tar

  release:
    name: Release ${{ matrix.target }}
    runs-on: ubuntu-20.04
    needs: build-image
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            artifact_name: dungeon_crawler.exe
          - target: x86_64-unknown-linux-gnu
            artifact_name: dungeon_crawler
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: myimage
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/mydebianrepo.tar
          docker image ls -a
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.target }} --release
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.artifact_name }}
          tag: ${{ github.ref }}
          overwrite: true
